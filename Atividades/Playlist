Algoritmo "Playlist"

tipo
   playlist = registro

      nome : caracter
      album : caracter
      gravadora : caracter
      ano : inteiro
      genero : caracter
      artista : caracter
      duracao : real
      escutada : logico
      nota : real
      slot : logico

   fimregistro

procedimento visualizar (view : inteiro):
var

inicio
   se espaco > 0 entao
      para i de 1 ate tamanho faca
         se MinhaPlaylist[i].slot = verdadeiro entao
            escreval("Posição: ", i, " | Nome: ", MinhaPlaylist[i].nome, " | Duração: ", MinhaPlaylist[i].duracao, " | Nota: ", MinhaPlaylist[i].nota, " | ")
         fimse
      fimpara
   senao
      escreval("Sua playlist está vazia, adicione mais músicas.")
   fimse

fimprocedimento

procedimento adicionar (nova : caracter):
var

inicio
   para i de 1 ate tamanho faca

      se espaco = tamanho entao
         escreval("Sua playlist está lotada, delete alguma música para registrar um nova.")
         interrompa
      fimse

      se MinhaPlaylist[i].slot = falso entao
         escreval("Digite o nome da nova música:")
         leia(MinhaPlaylist[i].nome)

         escreval("Digite o nome do álbum que a música pertence: ")
         leia(MinhaPlaylist[i].album)

         escreval("Digite o nome da gravadora")
         leia(MinhaPlaylist[i].gravadora)

         escreval("Digite o ano de lançamento da música")
         leia(MinhaPlaylist[i].ano)

         escreval("Digite o gênero da música")
         leia(MinhaPlaylist[i].genero)

         escreval("Digite o nome do(a) artista")
         leia(MinhaPlaylist[i].artista)

         escreval("Informe o tempo de duração da música usando '.' ")
         escreval("Exemplo: 3.14")
         leia(MinhaPlaylist[i].duracao)

         MinhaPlaylist[i].slot <- verdadeiro
         espaco <- espaco + 1

         escreval("Música adicionada com sucesso na posição ", i)
         interrompa
      fimse

   fimpara


fimprocedimento

procedimento remover (remo : caracter):
var
   indice, verify : inteiro
inicio
   escreval("Você prefere remover a música digitando a posição em que ela se encontra ou digitando o nome da música?")
   escreval("Exemplo: A música hino do inter se localiza na posição 2, então você digitará o número 2 para removê-la.")
   escreval("")
   escreval("Digite 1 para remoção por posiçao, Digite 2 pare remoção por nome ou Digite outra tecla qualquer para cancelar.")
   leia(remo)

   escolha remo

   caso "1"

      escreval("Digite a posição referente a música que deseja remover: ")
      leia(indice)
      se (indice > tamanho) OU (indice <= 0) entao
         escreval("Posição inválida, tente novamente.")
         remo("")
      senao
         se MinhaPlaylist[indice].slot = verdadeiro entao
            MinhaPlaylist[indice].slot <- falso
            escreval("A música referente a posição ", indice, " foi apagado")
            espaco <- espaco - 1
         senao
            escreval("Posição inválida, tente novamente.")
            remo("")
         fimse
      fimse



   caso "2"
      escreval("Digite exatamente o nome da música que deseja remover: ")
      leia(remo)
      para i de 1 ate tamanho faca
         se remo = MinhaPlaylist[i].nome E MinhaPlaylist[i].slot = verdadeiro entao

            MinhaPlaylist[i].slot <- falso

            escreval("A música referente a posição ", i, " foi apagado")
            espaco <- espaco - 1
            verify <- 1
            interrompa
         fimse

      fimpara
      se verify <> 1 entao
         escreval("Nome não encontrado")
      fimse

   outrocaso
      escreval("Remoção cancelada.")

   fimescolha

fimprocedimento

procedimento buscar (busca : caracter):
var
   indice, verify : inteiro
   name : caracter

inicio
   escreval("Você prefere buscar a música digitando a posição em que ela se encontra ou digitando o nome da música?")
   escreval("Exemplo: A música hino do inter se localiza na posição 2, então você digitará o número 2 para buscá-la.")
   escreval("")
   escreval("Digite 1 para buscar por posiçao OU Digite 2 pare buscar por nome.")
   escreval("Caso deseje cancelar a busca, Digite 0")
   leia(busca)

   escolha busca

   caso "1"
      escreval("Digite a posição referente a música que deseja buscar: ")
      leia(indice)
      se (indice > tamanho) ou (indice <= 0) entao
         error("")
         buscar("")
      senao
         se MinhaPlaylist[indice].slot = verdadeiro entao
            escreval("Nome : ", MinhaPlaylist[indice].nome, " | Albúm: ", MinhaPlaylist[indice].album, " | Gravadora: ", MinhaPlaylist[indice].gravadora, " | Ano: ", MinhaPlaylist[indice].ano, " | Gênero: ", MinhaPlaylist[indice].genero, " | Artista: ", MinhaPlaylist[indice].artista, " | Duração: ", MinhaPlaylist[indice].duracao, " | Nota: ", MinhaPlaylist[indice].nota, " | Escutada: ", MinhaPlaylist[indice].escutada, " | ")
         senao
            error("")
            buscar("")
         fimse
      fimse


   caso "2"
      escreval("Digite o exato nome da música que deseja buscar ")
      leia(name)
      para indice de 1 ate tamanho faca
         se (name = MinhaPlaylist[indice].nome) E (MinhaPlaylist[indice].slot = verdadeiro) entao
            escreval("Nome : ", MinhaPlaylist[indice].nome, " | Albúm: ", MinhaPlaylist[indice].album, " | Gravadora: ", MinhaPlaylist[indice].gravadora, " | Ano: ", MinhaPlaylist[indice].ano, " | Gênero: ", MinhaPlaylist[indice].genero, " | Artista: ", MinhaPlaylist[indice].artista, " | Duração: ", MinhaPlaylist[indice].duracao, " | Nota: ", MinhaPlaylist[indice].nota, " | Escutada: ", MinhaPlaylist[indice].escutada, " | ")
            verify <- 1
            interrompa
         fimse
      fimpara
      se verify <> 1 entao
         escreval("Nome não encontrado")
      fimse

   caso "0"
      escreval("Interrompendo busca...")

   outrocaso
      error("")
      buscar("")
   fimescolha

fimprocedimento

procedimento escutar (escutas : caracter):
var
   indice, verify : inteiro
   name : caracter
inicio
   escreval("Selecione a música que deseja escutar: ")
   escreval("Você prefere selecionar a música digitando a posição em que ela se encontra ou digitando o nome da música?")
   escreval("Exemplo: A música hino do inter se localiza na posição 2, então você digitará o número 2 para escutá-la.")
   escreval("")
   escreval("Digite 1 para escutar por posiçao, Digite 2 para escutar por nome OU Digite 3 para usar o modo aleatório.")
   escreval("Caso deseje cancelar a busca, Digite 0")
   leia(escutas)

   escolha escutas

   caso "1"
      escreval("Digite a posição referente a música que deseja escutar: ")
      leia(indice)
      se (indice > tamanho) ou (indice <= 0) entao
         error("")
         buscar("")
      senao
         se MinhaPlaylist[indice].slot = verdadeiro entao
            escreval("A música que você escutou foi: ", MinhaPlaylist[indice].nome)
            MinhaPlaylist[indice].escutada <- verdadeiro

            MinhaPlaylist[indice].nota <- avaliacao(0)

         senao
            error("")
            buscar("")
         fimse
      fimse

   caso "2"
      escreval("Digite o exato nome da música que deseja escutar ")
      leia(name)
      para indice de 1 ate tamanho faca
         se (name = MinhaPlaylist[indice].nome) E (MinhaPlaylist[indice].slot = verdadeiro) entao
            escreval("A música que você escutou foi: ", MinhaPlaylist[indice].nome)
            MinhaPlaylist[indice].escutada <- verdadeiro

            MinhaPlaylist[indice].nota <- avaliacao(0)
            verify <- 1
            interrompa
         fimse

      fimpara
      se verify <> 1 entao
         escreval("Música não encontrada.")
      fimse

   caso "3"
      se espaco = 0 entao
         error("")
         interrompa
      senao
         repita
            indice <- randi(tamanho + 1)
         ate MinhaPlaylist[indice].slot = verdadeiro
      fimse
      escreval("A música que você escutou foi: ", MinhaPlaylist[indice].nome)
      MinhaPlaylist[indice].escutada <- verdadeiro

      MinhaPlaylist[indice].nota <- avaliacao(0)



   caso "0"
      escreval("Fechando Player de Música...")

   fimescolha

fimprocedimento

procedimento organizar (meio : caracter):

var
   n1, n2 : inteiro
   buff : playlist

inicio
   escreval("========================================")
   escreval("Como você deseja organizar sua playlist?")
   escreval("Digite 1 para organizar manualmente")
   escreval("Digite 2 para organizar em ordem decrescente (Utilizando a duração da música como base)")
   escreval("Digite qualquer outra tecla para sair do menu de organização")
   leia(meio)

   escolha meio

   caso "1"
      escreval("")
      para i de 1 ate tamanho faca
         escreval("Posição : ", i, " | Nome: ", MinhaPlaylist[i].nome)
      fimpara

      escreval("AVISO: NÃO SELECIONE POSIÇÕES MAIOR QUE O TAMANHO DA PLAYLIST: ", tamanho)

      enquanto (n1 <= 0) ou (n1 > tamanho) faca
         escreval("PRIMEIRO digite o NÚMERO equivalente a POSIÇÃO da música que deseja TROCAR de lugar.")
         leia(n1)
      fimenquanto
      enquanto (n2 <= 0) ou (n2 > tamanho) faca
         escreval("AGORA digite o NÚMERO equivalente a NOVA POSIÇÃO da música selecionada.")
         leia(n2)
      fimenquanto


      buff <- MinhaPlaylist[n1]
      MinhaPlaylist[n1] <- MinhaPlaylist[n2]
      MinhaPlaylist[n2] <- buff

      escreval("Troca bem-sucedida")

   caso "2"
      bubblesort(0)


   fimescolha


fimprocedimento

procedimento bubblesort (num : real):

var
   buffer : playlist
   j : inteiro
   swapcounter : inteiro
inicio

   swapcounter <- -1

   repita
      swapcounter <- 0
      para i de 1 ate tamanho - 1 faca

         se (MinhaPlaylist[i].duracao < MinhaPlaylist[i + 1].duracao) entao
            buffer <- MinhaPlaylist[i]
            MinhaPlaylist[i] <- MinhaPlaylist[i + 1]
            MinhaPlaylist[i + 1] <- buffer
            swapcounter <- swapcounter + 1

         fimse

      fimpara
   ate swapcounter = 0

fimprocedimento

funcao avaliacao (n : real): real
var
   yn : caracter

inicio
   escreval("Deseja dar uma nota a está música?")
   escreval("Digite (Sim) para dar uma nota.")
   escreval("Digite qualquer tecla para não dar uma nota.")
   leia(yn)

   se yn = "Sim" entao

      escreval("Digite a nota de 1 até 10: ")
      enquanto (n <= 0) ou (n > 10) faca
         leia(n)
      fimenquanto

   fimse

   retorne n
fimfuncao

procedimento error (erro : caracter):
inicio
   escreval("========================================")
   escreval("")
   escreval("ERRO!")
   escreval("Leitura inválida, tente novamente.")
   escreval("")
   escreval("========================================")

fimprocedimento

funcao menus (botao : caracter): caracter

inicio

   escreval("========================================")
   escreval("")
   escreval("Bem vindo a sua playlist.")
   escreval("")
   escreval("Para visualizar sua playlist, digite 1")
   escreval("Para adicionar uma nova música, digite 2")
   escreval("Para remover uma música já existente, digite 3")
   escreval("Para buscar por uma música, digite 4")
   escreval("Para escutar uma música, digite 5")
   escreval("Para organizar sua playlist, digite 6")
   escreval("Para limpar sua tela, digite 'C'")
   escreval("Para fechar sua playlist, digite 0")
   escreval("")
   escreval("========================================")

   leia(botao)

   retorne botao

fimfuncao

var
   MinhaPlaylist : vetor[1..5] de playlist
   i, espaco, tamanho : inteiro
   menu : caracter


inicio

   tamanho <- 5 //SEMPRE DECLARARAR O TAMANHO DO VETOR.


   enquanto menu <> "0" faca

      menu <- menus("0")
      escolha menu

      caso "0"
         escreval("Fechando Playlist...")

      caso "1"
         visualizar(0)

      caso "2"
         adicionar("")

      caso "3"
         remover("")

      caso "4"
         buscar("")

      caso "5"
         escutar("")

      caso "6"
         organizar("")

      caso "C"
         limpatela

      fimescolha


   fimenquanto

fimalgoritmo